
# Generated by CodiumAI

import pytest

class TestSolution:

    # Tests that the search method returns the correct index when the target is in the middle of the list
    def test_search_middle(self):
        solution = Solution()
        nums = [1, 2, 3, 4, 5]
        target = 3
        assert solution.search(nums, target) == 2

    # Tests that the search method returns the correct index when the target is at the beginning of the list
    def test_search_beginning(self):
        solution = Solution()
        nums = [1, 2, 3, 4, 5]
        target = 1
        assert solution.search(nums, target) == 0

    # Tests that the search method returns the correct index when the target is at the end of the list
    def test_search_end(self):
        solution = Solution()
        nums = [1, 2, 3, 4, 5]
        target = 5
        assert solution.search(nums, target) == 4

    # Tests that the search method returns the correct index when the list has a length of 1
    def test_search_length_1(self):
        solution = Solution()
        nums = [1]
        target = 1
        assert solution.search(nums, target) == 0

    # Tests that the search method returns the correct index when the list has a length of 2
    def test_search_length_2(self):
        solution = Solution()
        nums = [1, 2]
        target = 2
        assert solution.search(nums, target) == 1

    # Tests that the search method returns -1 when the target is not found in the list
    def test_search_not_found(self):
        solution = Solution()
        nums = [1, 2, 3, 4, 5]
        target = 6
        assert solution.search(nums, target) == -1